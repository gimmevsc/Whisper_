{"ast":null,"code":"var _jsxFileName = \"/Users/bohdanprokopchuk/Desktop/db/frontend/src/pages/chat/Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport config from '../../config.json';\nimport ReconnectingWebSocket from 'reconnecting-websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const messageInput = useRef();\n  const {\n    room\n  } = useParams(); // Replace with dynamic room name as needed\n  const ws = useRef(null);\n  useEffect(() => {\n    console.log(room);\n    ws.current = new ReconnectingWebSocket(`${config.url.replace(/^http/, 'ws')}/ws/chat/${room}/`);\n    // Fetch initial chat messages\n\n    const url = `${config.url}/chat/${room}`;\n    const data = {\n      \"token\": Cookies.get('token')\n    };\n    ws.current.onopen = () => {\n      console.log('WebSocket connection established');\n      axios.post(url, data).then(res => {\n        console.log(\"Load the page\");\n      }).catch(err => console.log(\"what\"));\n    };\n    ws.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log(event.data);\n      setMessages(prevMessages => [...prevMessages, data.message]);\n    };\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    ws.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n\n    // Clean up the WebSocket connection when the component is unmounted\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n  function sendMessageHandler() {\n    ws.current.send(messageInput.current.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: messageInput,\n        onChange: () => console.log(messageInput.current.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessageHandler,\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"n/p0dgU3qGXG3YAFUYzTSug4Qkw=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","useParams","Cookies","config","ReconnectingWebSocket","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","messageInput","room","ws","console","log","current","url","replace","data","get","onopen","post","then","res","catch","err","onmessage","event","JSON","parse","prevMessages","message","onclose","onerror","error","close","sendMessageHandler","send","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","sender","type","ref","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/bohdanprokopchuk/Desktop/db/frontend/src/pages/chat/Chat.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport config from '../../config.json';\nimport ReconnectingWebSocket from 'reconnecting-websocket';\n\nfunction Chat() {\n    const [messages, setMessages] = useState([]);\n    const messageInput = useRef();\n    const {room} = useParams(); // Replace with dynamic room name as needed\n    const ws = useRef(null);\n    useEffect(() => {\n        console.log(room)\n        ws.current =new ReconnectingWebSocket(`${config.url.replace(/^http/, 'ws')}/ws/chat/${room}/`);\n        // Fetch initial chat messages\n        \n\n        const url = `${config.url}/chat/${room}`\n\n        const data = {\n            \"token\" : Cookies.get('token')\n        }        \n\n\n        ws.current.onopen = () => {\n            console.log('WebSocket connection established');\n            axios.post(url,data).then(res=>{\n                console.log(\"Load the page\")\n            }).catch(err=>console.log(\"what\"))\n        };\n\n        ws.current.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            console.log(event.data)\n            setMessages(prevMessages => [...prevMessages, data.message]);\n        };\n\n        ws.onclose = () => {\n            console.log('WebSocket connection closed');\n        };\n\n        ws.current.onerror = (error) => {\n            console.error('WebSocket error:', error);\n        };\n\n        // Clean up the WebSocket connection when the component is unmounted\n        return () => {\n            ws.current.close();\n        };\n    }, []);\n    function sendMessageHandler(){\n        ws.current.send(messageInput.current.value)\n    }\n    return (\n        <div className=\"main\">\n            <div className=\"header\">\n                {/* Add any header content here */}\n            </div>\n\n            <div className=\"chats\">\n                {/* Add any chat list content here */}\n            </div>\n\n            <div className=\"chat\">\n                <div className=\"messages\">\n                    {messages.map((msg, index) => (\n                        <div key={index}>\n                            <strong>{msg.sender}:</strong> {msg.message}\n                        </div>\n                    ))}\n                </div>\n\n                <input type=\"text\" ref={messageInput} onChange={() => console.log(messageInput.current.value)} />\n                <button onClick={sendMessageHandler}>Click</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}